import ast
from typing import Any

CQSCRIPT: str

def parse(script_source): ...

class CQModel:
    metadata: Any
    ast_tree: Any
    script_source: Any
    def __init__(self, script_source) -> None: ...
    def validate(self, params) -> None: ...
    def build(self, build_parameters: Any | None = ..., build_options: Any | None = ...): ...
    def set_param_values(self, params) -> None: ...

class ShapeResult:
    shape: Any
    options: Any
    def __init__(self) -> None: ...

class BuildResult:
    buildTime: Any
    results: Any
    debugObjects: Any
    first_result: Any
    success: bool
    exception: Any
    def __init__(self) -> None: ...
    def set_failure_result(self, ex) -> None: ...
    def set_debug(self, debugObjects) -> None: ...
    def set_success_result(self, results) -> None: ...

class ScriptMetadata:
    parameters: Any
    def __init__(self) -> None: ...
    def add_script_parameter(self, p) -> None: ...
    def add_parameter_description(self, name, description) -> None: ...

class ParameterType: ...
class NumberParameterType(ParameterType): ...
class StringParameterType(ParameterType): ...
class BooleanParameterType(ParameterType): ...

class InputParameter:
    default_value: Any
    name: Any
    varType: Any
    desc: Any
    valid_values: Any
    ast_node: Any
    def __init__(self) -> None: ...
    @staticmethod
    def create(ast_node, var_name, var_type, default_value, valid_values: Any | None = ..., desc: Any | None = ...): ...
    def set_value(self, new_value) -> None: ...

class ScriptCallback:
    outputObjects: Any
    debugObjects: Any
    def __init__(self) -> None: ...
    def show_object(self, shape, options=..., **kwargs) -> None: ...
    def debug(self, obj, args=...) -> None: ...
    def describe_parameter(self, var_data) -> None: ...
    def add_error(self, param, field_list) -> None: ...
    def has_results(self): ...

class InvalidParameterError(Exception): ...
class NoOutputError(Exception): ...

class ScriptExecutionError(Exception):
    line: int
    message: str
    def __init__(self, line: Any | None = ..., message: Any | None = ...) -> None: ...
    def full_message(self): ...

class EnvironmentBuilder:
    env: Any
    def __init__(self) -> None: ...
    def with_real_builtins(self): ...
    def with_builtins(self, env_dict): ...
    def with_cadquery_objects(self): ...
    def add_entry(self, name, value): ...
    def build(self): ...

class ParameterDescriptionFinder(ast.NodeTransformer):
    cqModel: Any
    def __init__(self, cq_model) -> None: ...
    def visit_Call(self, node): ...

class ConstantAssignmentFinder(ast.NodeTransformer):
    cqModel: Any
    def __init__(self, cq_model) -> None: ...
    def handle_assignment(self, var_name, value_node) -> None: ...
    def visit_Assign(self, node): ...
